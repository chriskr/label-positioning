{"version":3,"sources":["testLabels.js","util.js","Input.js","TestBubbleChart.jsx","index.js"],"names":["names","moveRect","_ref","deltaLeft","deltaTop","left","right","top","bottom","addMargin","_ref2","_ref3","leftMargin","rightMargin","getDistance","_ref4","_ref5","left1","top1","left2","top2","Math","pow","getCenter","_ref6","isOverlapping","_ref7","_ref8","right1","bottom1","right2","bottom2","_isOverlapping","_getCandidate","rect","layedOutRects","center","strategy","count","candRect","Object","objectSpread","rectWithMargin","some","layedOutRect","_layoutBox","_getBestCandidate","startPoint","candidates","withDistance","map","candidate","pysicalDistance","getPysicalDistance","distance","sort","a","b","slicedToArray","centerLeft","centerTop","rectLeft","rectTop","rectRight","rectBottom","horizontalDistance","verticalDistance","_ref16","_ref16$center","_ref16$strategy","forEach","centerRect","moveRight","moveDown","nop","StyledInput","styled","input","_templateObject","Input","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onInput","value","target","setState","state","submit","onChange","onKeyDown","event","key","ref","React","createRef","_this$props","placeholder","react_default","createElement","type","Component","DEFAULT_BUBBLE_COUNT","getFontSize","radius","Circle","circle","TestBubbleChart_templateObject","View","div","_templateObject2","H1","h1","_templateObject3","Container","_templateObject4","console","log","isHover","css","_templateObject5","Label","_templateObject6","Svg","svg","_templateObject7","Controls","_templateObject8","InputLabel","label","_templateObject9","Button","button","_templateObject10","buildExampleData","n","arguments","length","undefined","range","random","color","concat","labels","join","TestBubbleChart","setExampleData","data","bubbleCount","mode","hoverIndex","svgRef","containerRef","hoverCircle","_event","onMouseOver","nativeEvent","hanleMouseOver","throttle","closest","Array","from","parentElement","children","indexOf","_this2","style","width","height","viewBox","index","r","cx","cy","opacity","fill","_ref2$label","fontSize","className","src_Input","onClick","current","currentData","containerRect","getBoundingClientRect","offsetLeft","offsetTop","layedOutLabels","rects","bubbles","constraints","minMargin","sum","_ref11","_ref12","centerDistance","bubble","toConsumableArray","candRects","_ref13","_ref14","bestCandidate","push","slice","minusMargin","_ref15","layoutRects","querySelectorAll","ele","_currentData$index","HEIGHT","WIDTH","rest","objectWithoutProperties","positionLabels","ReactDOM","render","src_TestBubbleChart","document","getElementById"],"mappings":"6QAAaA,EAAQ,CACnB,OACA,OACA,UACA,QACA,QACA,WACA,QACA,SACA,SACA,QACA,QACA,UACA,YACA,QACA,SACA,UACA,QACA,QACA,SACA,UACA,SACA,YACA,QACA,SACA,QACA,SACA,OACA,OACA,QACA,OACA,UACA,UACA,QACA,UACA,OACA,SACA,OACA,cACA,SACA,SACA,UACA,QACA,OACA,QACA,SACA,QACA,SACA,SACA,UACA,QACA,SACA,YACA,SACA,MACA,WACA,SACA,SACA,SACA,QACA,UACA,MACA,WACA,WACA,SACA,SACA,SACA,QACA,WACA,OACA,SACA,QACA,UACA,SACA,UACA,SACA,MACA,OACA,QACA,SACA,UACA,OACA,UACA,SACA,OACA,WACA,SACA,OACA,SACA,SACA,SACA,QACA,QACA,WACA,QACA,SACA,QACA,WACA,SACA,QACA,UACA,QACA,UACA,UACA,UACA,OACA,QACA,QACA,UACA,SACA,QACA,SACA,YACA,WACA,UACA,OACA,SACA,OACA,UACA,SACA,QACA,UACA,QACA,UACA,SACA,SACA,SACA,MACA,MACA,QACA,OACA,QACA,SACA,UACA,WACA,OACA,SACA,OACA,SACA,QACA,QACA,SACA,WACA,OACA,QACA,SACA,OACA,OACA,SACA,OACA,QACA,OACA,QACA,UACA,WACA,QACA,OACA,OACA,UACA,OACA,UACA,SACA,SACA,SACA,UACA,SACA,QACA,OACA,WACA,SACA,UACA,UACA,QACA,SACA,SACA,UACA,SACA,OACA,OACA,SACA,QACA,QACA,SACA,SACA,QACA,SACA,QACA,SACA,OACA,SACA,UACA,SACA,QACA,SACA,YACA,SACA,SACA,UACA,UACA,OACA,2BCvLWC,EAAW,SAAAC,EAEtBC,EACAC,GAHsB,MAIlB,CACJC,KALsBH,EACpBG,KAIWF,EACbG,MANsBJ,EACdI,MAKOH,EACfI,IAPsBL,EACPK,IAMJH,EACXI,OARsBN,EACFM,OAOHJ,IAGNK,EAAY,SAAAC,EAAAC,GAAA,IACrBN,EADqBK,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","file":"static/js/main.23488e40.chunk.js","sourcesContent":["export const names = [\n  'Liam',\n  'Noah',\n  'William',\n  'James',\n  'Logan',\n  'Benjamin',\n  'Mason',\n  'Elijah',\n  'Oliver',\n  'Jacob',\n  'Lucas',\n  'Michael',\n  'Alexander',\n  'Ethan',\n  'Daniel',\n  'Matthew',\n  'Aiden',\n  'Henry',\n  'Joseph',\n  'Jackson',\n  'Samuel',\n  'Sebastian',\n  'David',\n  'Carter',\n  'Wyatt',\n  'Jayden',\n  'John',\n  'Owen',\n  'Dylan',\n  'Luke',\n  'Gabriel',\n  'Anthony',\n  'Isaac',\n  'Grayson',\n  'Jack',\n  'Julian',\n  'Levi',\n  'Christopher',\n  'Joshua',\n  'Andrew',\n  'Lincoln',\n  'Mateo',\n  'Ryan',\n  'Jaxon',\n  'Nathan',\n  'Aaron',\n  'Isaiah',\n  'Thomas',\n  'Charles',\n  'Caleb',\n  'Josiah',\n  'Christian',\n  'Hunter',\n  'Eli',\n  'Jonathan',\n  'Connor',\n  'Landon',\n  'Adrian',\n  'Asher',\n  'Cameron',\n  'Leo',\n  'Theodore',\n  'Jeremiah',\n  'Hudson',\n  'Robert',\n  'Easton',\n  'Nolan',\n  'Nicholas',\n  'Ezra',\n  'Colton',\n  'Angel',\n  'Brayden',\n  'Jordan',\n  'Dominic',\n  'Austin',\n  'Ian',\n  'Adam',\n  'Elias',\n  'Jaxson',\n  'Greyson',\n  'Jose',\n  'Ezekiel',\n  'Carson',\n  'Evan',\n  'Maverick',\n  'Bryson',\n  'Jace',\n  'Cooper',\n  'Xavier',\n  'Parker',\n  'Roman',\n  'Jason',\n  'Santiago',\n  'Chase',\n  'Sawyer',\n  'Gavin',\n  'Leonardo',\n  'Kayden',\n  'Ayden',\n  'Jameson',\n  'Kevin',\n  'Bentley',\n  'Zachary',\n  'Everett',\n  'Axel',\n  'Tyler',\n  'Micah',\n  'Vincent',\n  'Weston',\n  'Miles',\n  'Wesley',\n  'Nathaniel',\n  'Harrison',\n  'Brandon',\n  'Cole',\n  'Declan',\n  'Luis',\n  'Braxton',\n  'Damian',\n  'Silas',\n  'Tristan',\n  'Ryder',\n  'Bennett',\n  'George',\n  'Emmett',\n  'Justin',\n  'Kai',\n  'Max',\n  'Diego',\n  'Luca',\n  'Ryker',\n  'Carlos',\n  'Maxwell',\n  'Kingston',\n  'Ivan',\n  'Maddox',\n  'Juan',\n  'Ashton',\n  'Jayce',\n  'Rowan',\n  'Kaiden',\n  'Giovanni',\n  'Eric',\n  'Jesus',\n  'Calvin',\n  'Abel',\n  'King',\n  'Camden',\n  'Amir',\n  'Blake',\n  'Alex',\n  'Brody',\n  'Malachi',\n  'Emmanuel',\n  'Jonah',\n  'Beau',\n  'Jude',\n  'Antonio',\n  'Alan',\n  'Elliott',\n  'Elliot',\n  'Waylon',\n  'Xander',\n  'Timothy',\n  'Victor',\n  'Bryce',\n  'Finn',\n  'Brantley',\n  'Edward',\n  'Abraham',\n  'Patrick',\n  'Grant',\n  'Karter',\n  'Hayden',\n  'Richard',\n  'Miguel',\n  'Joel',\n  'Gael',\n  'Tucker',\n  'Rhett',\n  'Avery',\n  'Steven',\n  'Graham',\n  'Kaleb',\n  'Jasper',\n  'Jesse',\n  'Matteo',\n  'Dean',\n  'Zayden',\n  'Preston',\n  'August',\n  'Oscar',\n  'Jeremy',\n  'Alejandro',\n  'Marcus',\n  'Dawson',\n  'Lorenzo',\n  'Messiah',\n  'Zion',\n  'Maximus'\n];\n","import { sum } from 'lodash';\n\nconst NO_OVERLAP = {\n  get left() {\n    return 0;\n  },\n  get right() {\n    return 0;\n  },\n  get top() {\n    return 0;\n  },\n  get bottom() {\n    return 0;\n  },\n};\n\nexport const moveRect = (\n  { left, right, top, bottom },\n  deltaLeft,\n  deltaTop\n) => ({\n  left: left + deltaLeft,\n  right: right + deltaLeft,\n  top: top + deltaTop,\n  bottom: bottom + deltaTop,\n});\n\nexport const addMargin = (\n  { left, right, top, bottom },\n  { left: leftMargin, right: rightMargin, top: topMargin, bottom: bottomMargin }\n) => ({\n  left: left - leftMargin,\n  top: top - topMargin,\n  right: right + rightMargin,\n  bottom: bottom + bottomMargin,\n});\n\nexport const getDistance = (\n  { left: left1, top: top1 },\n  { left: left2, top: top2 }\n) => ((left1 - left2) ** 2 + (top1 - top2) ** 2) ** 0.5;\n\nexport const getCenter = ({ left, right, top, bottom }) => {\n  left += (right - left) / 2;\n  top += (bottom - top) / 2;\n  return {\n    left,\n    top,\n    right: left,\n    bottom: top,\n  };\n};\n\nexport const isOverlapping = (\n  { left: left1, right: right1, top: top1, bottom: bottom1 },\n  { left: left2, right: right2, top: top2, bottom: bottom2 }\n) => _isOverlapping(left1, left2, right1, right2, top1, top2, bottom1, bottom2);\n\nconst getOverlap = (\n  { left: left1, right: right1, top: top1, bottom: bottom1 },\n  { left: left2, right: right2, top: top2, bottom: bottom2 }\n) =>\n  _isOverlapping(left1, left2, right1, right2, top1, top2, bottom1, bottom2)\n    ? {\n        left: Math.max(left1, left2),\n        right: Math.min(right1, right2),\n        top: Math.max(top1, top2),\n        bottom: Math.min(bottom1, bottom2),\n      }\n    : NO_OVERLAP;\n\nexport const layoutRects = (\n  rects,\n  bubbles,\n  constraints,\n  minMargin = { left: 2, top: 1, right: 2, bottom: 1 }\n) => {\n  const centerLeft =\n    sum(rects.map(({ left, right }) => left + (right - left) / 2)) /\n    rects.length;\n\n  const centerTop =\n    sum(rects.map(({ top, bottom }) => top + (bottom - top) / 2)) /\n    rects.length;\n\n  const center = {\n    left: centerLeft,\n    right: centerLeft,\n    top: centerTop,\n    bottom: centerTop,\n  };\n\n  const withDistance = rects\n    .map((rect, index) => ({\n      centerDistance: getDistance(getCenter(rect), center),\n      rect,\n      rectWithMargin: addMargin(rect, minMargin),\n      index,\n      bubble: bubbles[index],\n    }))\n    .sort((a, b) => b.bubble.radius - a.bubble.radius);\n\n  let layedOutRects = [...constraints.map(rect => ({ rectWithMargin: rect }))];\n\n  withDistance.forEach(rect => {\n    const candRects = [\n      [center, {}],\n      [null, { moveRight: false, moveDown: false }],\n      [null, { moveRight: true, moveDown: false }],\n      [null, { moveRight: false, moveDown: true }],\n      [null, { moveRight: true, moveDown: true }],\n    ].map(([center, strategy]) =>\n      _getCandidate(rect, layedOutRects, center, strategy)\n    );\n    const startPoint = {\n      left: rect.bubble.left,\n      right: rect.bubble.left,\n      top: rect.bubble.top,\n      bottom: rect.bubble.top,\n    };\n    const bestCandidate = _getBestCandidate(startPoint, candRects);\n    rect.rectWithMargin = bestCandidate;\n    layedOutRects.push(rect);\n  });\n\n  layedOutRects = layedOutRects.slice(constraints.length);\n\n  const minusMargin = {\n    left: -minMargin.left,\n    right: -minMargin.right,\n    top: -minMargin.top,\n    bottom: -minMargin.bottom,\n  };\n\n  return layedOutRects\n    .sort((a, b) => a.index - b.index)\n    .map(({ rectWithMargin, label }) => addMargin(rectWithMargin, minusMargin));\n};\n\nconst _getCandidate = (rect, layedOutRects, center, strategy) => {\n  let count = 16;\n  let candRect = { ...rect.rectWithMargin };\n  while (\n    layedOutRects.some(layedOutRect =>\n      isOverlapping(candRect, layedOutRect.rectWithMargin)\n    ) &&\n    count-- > 0\n  ) {\n    candRect = _layoutBox({ rect: candRect, layedOutRects, center, strategy });\n  }\n  return candRect;\n};\n\nconst _getBestCandidate = (startPoint, candidates) => {\n  const withDistance = candidates\n    .map(candidate => ({\n      candidate,\n      pysicalDistance: getPysicalDistance(startPoint, candidate),\n      distance: getDistance(startPoint, getCenter(candidate)),\n    }))\n    .sort((a, b) =>\n      a.pysicalDistance === 0 && b.pysicalDistance === 0\n        ? a.distance - b.distance\n        : a.pysicalDistance - b.pysicalDistance\n    );\n  const [{ candidate }] = withDistance;\n  return candidate;\n};\n\nconst getPysicalDistance = (center, rect) => {\n  const { left: centerLeft, top: centerTop } = center;\n  const {\n    left: rectLeft,\n    top: rectTop,\n    right: rectRight,\n    bottom: rectBottom,\n  } = rect;\n\n  const horizontalDistance =\n    rectLeft <= centerLeft && rectRight >= centerLeft\n      ? 0\n      : rectLeft > centerLeft\n      ? rectLeft - centerLeft\n      : centerLeft - rectRight;\n  const verticalDistance =\n    rectTop <= centerTop && rectBottom >= centerTop\n      ? 0\n      : rectTop > centerTop\n      ? rectTop - centerTop\n      : centerTop - rectBottom;\n\n  return (horizontalDistance ** 2 + verticalDistance ** 2) ** 0.5;\n};\n\nconst _layoutBox = ({ rect, layedOutRects, center = null, strategy = {} }) => {\n  layedOutRects.forEach(layedOutRect => {\n    if (isOverlapping(rect, layedOutRect.rectWithMargin)) {\n      const centerRect = getCenter(rect);\n      const moveRight = center\n        ? centerRect.left > center.left\n        : strategy.moveRight;\n      const deltaLeft = moveRight\n        ? // move right\n          layedOutRect.rectWithMargin.right - rect.left\n        : // move left\n          layedOutRect.rectWithMargin.left - rect.right;\n      const moveDown = center ? centerRect.top > center.top : strategy.moveDown;\n      const deltaTop = moveDown\n        ? // move down\n          layedOutRect.rectWithMargin.bottom - rect.top\n        : // move up\n          layedOutRect.rectWithMargin.top - rect.bottom;\n\n      rect = _getBestCandidate(centerRect, [\n        moveRect(rect, deltaLeft, 0),\n        moveRect(rect, 0, deltaTop),\n      ]);\n    }\n  });\n  return rect;\n};\n\nconst _isOverlapping = (\n  left1,\n  left2,\n  right1,\n  right2,\n  top1,\n  top2,\n  bottom1,\n  bottom2\n) => left1 < right2 && left2 < right1 && top1 < bottom2 && top2 < bottom1;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst nop = () => null;\n\nconst StyledInput = styled.input`\n  -webkit-appearance: none;\n  background: none;\n  border: 1px solid hsla(30, 56%, 20%, 0);\n  color: hsla(30, 56%, 20%, 0.7);\n  font: inherit;\n  height: 32px;\n  line-height: 1;\n  margin: 0;\n  padding: 0 8px;\n  text-align: center;\n  width: 2em;\n  &:hover {\n    background: white !important;\n    border-color: hsla(30, 56%, 20%, 0.3) !important;\n  }\n`;\n\nclass Input extends React.Component {\n  onInput = ({ target: { value } }) => this.setState({ value });\n  state = {\n    value: '',\n  };\n\n  submit = () => this.props.onChange && this.props.onChange(this.state.value);\n\n  onKeyDown = event => {\n    switch (event.key) {\n      case 'Enter':\n        this.submit();\n        break;\n    }\n  };\n\n  ref = React.createRef();\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.value,\n    };\n  }\n\n  render() {\n    const { onChange, placeholder } = this.props;\n\n    return (\n      <StyledInput\n        type=\"text\"\n        value={this.state.value}\n        placeholder={placeholder}\n        onInput={this.onInput}\n        onChange={nop}\n        onKeyDown={this.onKeyDown}\n      />\n    );\n  }\n}\n\nexport default Input;\n","import React from 'react';\nimport { range, throttle } from 'lodash';\nimport styled, { css } from 'styled-components';\nimport { names as labels } from './testLabels';\nimport { layoutRects, moveRect } from './util';\nimport Input from './Input';\n\nconst WIDTH = 800;\nconst HEIGHT = 500;\nconst MAX_RADIUS = 50;\nconst MIN_RADIUS = 10;\nconst MIN_FONT_SIZE = 10;\nconst MAX_FONT_SIZE = 24;\n\nconst DEFAULT_BUBBLE_COUNT = 50;\n\nconst getFontSize = radius => {\n  return (\n    MIN_FONT_SIZE +\n    ((radius - MIN_RADIUS) / (MAX_RADIUS - MIN_RADIUS)) *\n      (MAX_FONT_SIZE - MIN_FONT_SIZE)\n  );\n};\n\nconst Circle = styled.circle`\n  stroke-width: 1;\n  stroke: hsla(0, 0%, 0%, 0.15);\n  cursor: pointer;\n`;\n\nconst View = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n`;\n\nconst H1 = styled.h1`\n  font-weight: 100;\n  margin: 0;\n\n  font-size: 1.5em;\n  color: hsla(30, 56%, 20%, 0.7);\n  padding: 16px 40px;\n  border-radius: 68px;\n  line-height: 1;\n  width: 858px;\n  text-align: center;\n  text-transform: uppercase;\n  letter-spacing: 12px;\n  font-stretch: expanded;\n  margin-bottom: 48px;\n`;\n\nconst Container = styled.div`\n  position: relative;\n  width: ${WIDTH}px;\n  & circle,\n  & .label {\n    transition: opacity 0.25s;\n  }\n  ${props => (\n    console.log(props.isHover),\n    props.isHover &&\n      css`\n        & circle {\n          opacity: 0.1;\n        }\n        & .label {\n          opacity: 0;\n        }\n      `\n  )}\n`;\n\nconst Label = styled.div`\n  white-space: nowrap;\n  position: absolute;\n  top: 0;\n  left: 0;\n  line-height: 1;\n  font-size: 10px;\n  font-weight: 300;\n  pointer-events: none;\n  text-align: center;\n`;\n\nconst Svg = styled.svg`\n  height: ${HEIGHT}px;\n  width: ${WIDTH}px;\n  box-shadow: 0 0 0 12px hsl(30, 56%, 94%), 0 0 0 24px hsla(30, 56%, 20%, 0.15);\n  border-radius: 24px;\n  border: none;\n`;\n\nconst Controls = styled.div`\n  margin-top: 52px;\n  color: hsla(30, 56%, 20%, 0.7);\n`;\n\nconst InputLabel = styled.label`\n  margin: 0 20px;\n  text-transform: uppercase;\n  letter-spacing: 3px;\n`;\n\nconst Button = styled.button`\n  background: none;\n  border: 1px solid hsla(30, 56%, 20%, 0.3);\n  font: inherit;\n  line-height: 34px;\n  padding: 0 16px;\n  margin: 0 20px;\n  border-radius: 16px;\n  color: hsla(30, 56%, 20%, 0.7);\n  height: 34px;\n  cursor: pointer;\n  text-transform: uppercase;\n  letter-spacing: 3px;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst getRandomLabel = () =>\n  range((1 + Math.random() * 3) | 0)\n    .map(() => labels[(Math.random() * labels.length) | 0])\n    .join(' ');\n\nconst buildExampleData = (n = 50) => {\n  return range(n).map(() => {\n    const radius = (MIN_RADIUS + Math.random() * (MAX_RADIUS - MIN_RADIUS)) | 0;\n    const left = (MAX_RADIUS + Math.random() * (WIDTH - 2 * MAX_RADIUS)) | 0;\n    const top = (MAX_RADIUS + Math.random() * (HEIGHT - 2 * MAX_RADIUS)) | 0;\n    const color = `hsla(${(Math.random() * 360) | 0}, 100%, 50%, .3)`;\n    const label = {\n      label: getRandomLabel(),\n      left: 0,\n      top: 0,\n    };\n    return { radius, left, top, color, label };\n  });\n};\n\nclass TestBubbleChart extends React.Component {\n  setExampleData = () => {\n    const data = buildExampleData(this.state.bubbleCount).sort(\n      (a, b) => b.radius - a.radius\n    );\n    this.setState({ data, mode: 0, hoverIndex: -1 });\n  };\n  state = {\n    data: buildExampleData(DEFAULT_BUBBLE_COUNT).sort(\n      (a, b) => b.radius - a.radius\n    ),\n    mode: 0,\n    bubbleCount: DEFAULT_BUBBLE_COUNT,\n    hoverIndex: -1,\n  };\n  svgRef = React.createRef();\n  containerRef = React.createRef();\n  hoverCircle = null;\n  _event = null;\n  onMouseOver = event => {\n    this._event = event.nativeEvent;\n    this.hanleMouseOver();\n  };\n  hanleMouseOver = throttle(() => {\n    if (!this._event) return;\n    const circle = this._event.target.closest('circle');\n    if (circle !== this.hoverCircle) {\n      this.hoverCircle = circle;\n      const hoverIndex = circle\n        ? Array.from(circle.parentElement.children).indexOf(circle)\n        : -1;\n      this.setState({ hoverIndex });\n    }\n    this._event = null;\n  }, 64);\n  render() {\n    const style = {\n      width: `$WIDTH}px`,\n      height: `${HEIGHT}px`,\n    };\n    return (\n      <View>\n        <H1>Bubble Chart Labels</H1>\n        <Container\n          ref={this.containerRef}\n          isHover={this.state.hoverIndex > -1}\n          onMouseOver={this.onMouseOver}\n        >\n          <Svg\n            viewBox={`0 0 ${WIDTH} ${HEIGHT}`}\n            style={style}\n            ref={this.svgRef}\n          >\n            {this.state.data.map(\n              ({ radius: r, left: cx, top: cy, color }, index) => {\n                const style =\n                  index === this.state.hoverIndex ? { opacity: 1 } : {};\n                return (\n                  <Circle r={r} cx={cx} cy={cy} fill={color} style={style} />\n                );\n              }\n            )}\n          </Svg>\n          {this.state.data.map(\n            ({ label: { label, top, left }, radius }, index) => {\n              const style = {\n                left: `${left}px`,\n                top: `${top}px`,\n                fontSize: `${getFontSize(radius)}px`,\n              };\n              if (index === this.state.hoverIndex) {\n                style.opacity = 1;\n              }\n              return (\n                <Label style={style} className=\"label\">\n                  {label}\n                </Label>\n              );\n            }\n          )}\n        </Container>\n        <Controls>\n          <InputLabel>bubble count</InputLabel>\n          <Input\n            value={this.state.bubbleCount}\n            onChange={bubbleCount =>\n              this.setState({\n                bubbleCount,\n                data: buildExampleData(bubbleCount).sort(\n                  (a, b) => b.radius - a.radius\n                ),\n                mode: 0,\n                hoverIndex: -1,\n              })\n            }\n          />\n          <Button onClick={this.setExampleData}>Set example data</Button>\n        </Controls>\n      </View>\n    );\n  }\n\n  positionLabels() {\n    if (!this.containerRef.current) {\n      return;\n    }\n    if (this.state.mode === 0) {\n      const currentData = this.state.data;\n      const containerRect = this.containerRef.current.getBoundingClientRect();\n      const { left: offsetLeft, top: offsetTop } = containerRect;\n      const labelRects = Array.from(\n        this.containerRef.current.querySelectorAll('.label')\n      ).map((ele, index) => {\n        const rect = ele.getBoundingClientRect();\n        const { left, top } = currentData[index];\n        const deltaLeft = left - offsetLeft - (rect.right - rect.left) / 2;\n        const deltaTop = top - offsetTop - (rect.bottom - rect.top) / 2;\n        return moveRect(rect, deltaLeft, deltaTop);\n      });\n      const bubbles = this.state.data.map(({ radius, left, top }) => ({\n        radius,\n        left,\n        top,\n      }));\n      const borderWidth = 20;\n      const constraints = [\n        {\n          left: -borderWidth,\n          right: 0,\n          top: -borderWidth,\n          bottom: HEIGHT + 2 * borderWidth,\n        },\n        {\n          left: WIDTH,\n          right: WIDTH + borderWidth,\n          top: -borderWidth,\n          bottom: HEIGHT + 2 * borderWidth,\n        },\n        { left: 0, right: WIDTH, top: -borderWidth, bottom: 0 },\n        { left: 0, right: WIDTH, top: HEIGHT, bottom: HEIGHT + borderWidth },\n      ];\n      const layedOutLabels = layoutRects(labelRects, bubbles, constraints);\n      const data = this.state.data.map(\n        ({ label: { label }, ...rest }, index) => {\n          const rect = layedOutLabels[index];\n          return {\n            ...rest,\n            label: {\n              label,\n              ...rect,\n            },\n          };\n        }\n      );\n      this.setState({ data, mode: 1, hoverIndex: -1 });\n    }\n  }\n\n  componentDidMount() {\n    this.positionLabels();\n  }\n\n  componentDidUpdate() {\n    this.positionLabels();\n  }\n}\n\nexport default TestBubbleChart;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TestBubbleChart from './TestBubbleChart';\n\nReactDOM.render(<TestBubbleChart />, document.getElementById('root'));\n"],"sourceRoot":""}